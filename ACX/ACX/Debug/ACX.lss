
ACX.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000002c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000254  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000037  00800200  00800200  000002c8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002c8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00000338  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000eff  00000000  00000000  000003a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c5c  00000000  00000000  0000129f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000048a  00000000  00000000  00001efb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000cc  00000000  00000000  00002388  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000062f  00000000  00000000  00002454  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000009f  00000000  00000000  00002a83  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00002b22  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	81 c0       	rjmp	.+258    	; 0x108 <__bad_interrupt>
   6:	00 00       	nop
   8:	7f c0       	rjmp	.+254    	; 0x108 <__bad_interrupt>
   a:	00 00       	nop
   c:	7d c0       	rjmp	.+250    	; 0x108 <__bad_interrupt>
   e:	00 00       	nop
  10:	7b c0       	rjmp	.+246    	; 0x108 <__bad_interrupt>
  12:	00 00       	nop
  14:	79 c0       	rjmp	.+242    	; 0x108 <__bad_interrupt>
  16:	00 00       	nop
  18:	77 c0       	rjmp	.+238    	; 0x108 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	75 c0       	rjmp	.+234    	; 0x108 <__bad_interrupt>
  1e:	00 00       	nop
  20:	73 c0       	rjmp	.+230    	; 0x108 <__bad_interrupt>
  22:	00 00       	nop
  24:	71 c0       	rjmp	.+226    	; 0x108 <__bad_interrupt>
  26:	00 00       	nop
  28:	6f c0       	rjmp	.+222    	; 0x108 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	6d c0       	rjmp	.+218    	; 0x108 <__bad_interrupt>
  2e:	00 00       	nop
  30:	6b c0       	rjmp	.+214    	; 0x108 <__bad_interrupt>
  32:	00 00       	nop
  34:	69 c0       	rjmp	.+210    	; 0x108 <__bad_interrupt>
  36:	00 00       	nop
  38:	67 c0       	rjmp	.+206    	; 0x108 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	65 c0       	rjmp	.+202    	; 0x108 <__bad_interrupt>
  3e:	00 00       	nop
  40:	63 c0       	rjmp	.+198    	; 0x108 <__bad_interrupt>
  42:	00 00       	nop
  44:	61 c0       	rjmp	.+194    	; 0x108 <__bad_interrupt>
  46:	00 00       	nop
  48:	5f c0       	rjmp	.+190    	; 0x108 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	5d c0       	rjmp	.+186    	; 0x108 <__bad_interrupt>
  4e:	00 00       	nop
  50:	5b c0       	rjmp	.+182    	; 0x108 <__bad_interrupt>
  52:	00 00       	nop
  54:	f3 c0       	rjmp	.+486    	; 0x23c <__vector_21>
  56:	00 00       	nop
  58:	57 c0       	rjmp	.+174    	; 0x108 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	55 c0       	rjmp	.+170    	; 0x108 <__bad_interrupt>
  5e:	00 00       	nop
  60:	53 c0       	rjmp	.+166    	; 0x108 <__bad_interrupt>
  62:	00 00       	nop
  64:	51 c0       	rjmp	.+162    	; 0x108 <__bad_interrupt>
  66:	00 00       	nop
  68:	4f c0       	rjmp	.+158    	; 0x108 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	4d c0       	rjmp	.+154    	; 0x108 <__bad_interrupt>
  6e:	00 00       	nop
  70:	4b c0       	rjmp	.+150    	; 0x108 <__bad_interrupt>
  72:	00 00       	nop
  74:	49 c0       	rjmp	.+146    	; 0x108 <__bad_interrupt>
  76:	00 00       	nop
  78:	47 c0       	rjmp	.+142    	; 0x108 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	45 c0       	rjmp	.+138    	; 0x108 <__bad_interrupt>
  7e:	00 00       	nop
  80:	43 c0       	rjmp	.+134    	; 0x108 <__bad_interrupt>
  82:	00 00       	nop
  84:	41 c0       	rjmp	.+130    	; 0x108 <__bad_interrupt>
  86:	00 00       	nop
  88:	3f c0       	rjmp	.+126    	; 0x108 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	3d c0       	rjmp	.+122    	; 0x108 <__bad_interrupt>
  8e:	00 00       	nop
  90:	3b c0       	rjmp	.+118    	; 0x108 <__bad_interrupt>
  92:	00 00       	nop
  94:	39 c0       	rjmp	.+114    	; 0x108 <__bad_interrupt>
  96:	00 00       	nop
  98:	37 c0       	rjmp	.+110    	; 0x108 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	35 c0       	rjmp	.+106    	; 0x108 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	33 c0       	rjmp	.+102    	; 0x108 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	31 c0       	rjmp	.+98     	; 0x108 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	2f c0       	rjmp	.+94     	; 0x108 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	2d c0       	rjmp	.+90     	; 0x108 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	2b c0       	rjmp	.+86     	; 0x108 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	29 c0       	rjmp	.+82     	; 0x108 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	27 c0       	rjmp	.+78     	; 0x108 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	25 c0       	rjmp	.+74     	; 0x108 <__bad_interrupt>
  be:	00 00       	nop
  c0:	23 c0       	rjmp	.+70     	; 0x108 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	21 c0       	rjmp	.+66     	; 0x108 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	1f c0       	rjmp	.+62     	; 0x108 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	1d c0       	rjmp	.+58     	; 0x108 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	1b c0       	rjmp	.+54     	; 0x108 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	19 c0       	rjmp	.+50     	; 0x108 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	17 c0       	rjmp	.+46     	; 0x108 <__bad_interrupt>
  da:	00 00       	nop
  dc:	15 c0       	rjmp	.+42     	; 0x108 <__bad_interrupt>
  de:	00 00       	nop
  e0:	13 c0       	rjmp	.+38     	; 0x108 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	22 e0       	ldi	r18, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.do_clear_bss_start>

000000fc <.do_clear_bss_loop>:
  fc:	1d 92       	st	X+, r1

000000fe <.do_clear_bss_start>:
  fe:	a7 33       	cpi	r26, 0x37	; 55
 100:	b2 07       	cpc	r27, r18
 102:	e1 f7       	brne	.-8      	; 0xfc <.do_clear_bss_loop>
 104:	99 d0       	rcall	.+306    	; 0x238 <main>
 106:	a4 c0       	rjmp	.+328    	; 0x250 <_exit>

00000108 <__bad_interrupt>:
 108:	7b cf       	rjmp	.-266    	; 0x0 <__vectors>

0000010a <x_init>:

/************************************************************************
*
************************************************************************/
void x_enable(uint8_t thread_id)
{
 10a:	cf 93       	push	r28
 10c:	df 93       	push	r29
 10e:	f8 94       	cli
 110:	82 e0       	ldi	r24, 0x02	; 2
 112:	84 bd       	out	0x24, r24	; 36
 114:	9a ef       	ldi	r25, 0xFA	; 250
 116:	97 bd       	out	0x27, r25	; 39
 118:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
 11c:	83 e0       	ldi	r24, 0x03	; 3
 11e:	85 bd       	out	0x25, r24	; 37
 120:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <_edata+0x1>
 124:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <_edata>
 128:	8e ef       	ldi	r24, 0xFE	; 254
 12a:	80 93 13 02 	sts	0x0213, r24	; 0x800213 <disable_status>
 12e:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <suspend_status>
 132:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <delay_status>
 136:	e3 e0       	ldi	r30, 0x03	; 3
 138:	f2 e0       	ldi	r31, 0x02	; 2
 13a:	11 82       	std	Z+1, r1	; 0x01
 13c:	10 82       	st	Z, r1
 13e:	13 82       	std	Z+3, r1	; 0x03
 140:	12 82       	std	Z+2, r1	; 0x02
 142:	15 82       	std	Z+5, r1	; 0x05
 144:	14 82       	std	Z+4, r1	; 0x04
 146:	17 82       	std	Z+7, r1	; 0x07
 148:	16 82       	std	Z+6, r1	; 0x06
 14a:	11 86       	std	Z+9, r1	; 0x09
 14c:	10 86       	std	Z+8, r1	; 0x08
 14e:	13 86       	std	Z+11, r1	; 0x0b
 150:	12 86       	std	Z+10, r1	; 0x0a
 152:	15 86       	std	Z+13, r1	; 0x0d
 154:	14 86       	std	Z+12, r1	; 0x0c
 156:	17 86       	std	Z+15, r1	; 0x0f
 158:	16 86       	std	Z+14, r1	; 0x0e
 15a:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <x_thread_id>
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <x_thread_mask>
 164:	e4 e1       	ldi	r30, 0x14	; 20
 166:	f2 e0       	ldi	r31, 0x02	; 2
 168:	8f ef       	ldi	r24, 0xFF	; 255
 16a:	90 e2       	ldi	r25, 0x20	; 32
 16c:	91 83       	std	Z+1, r25	; 0x01
 16e:	80 83       	st	Z, r24
 170:	93 83       	std	Z+3, r25	; 0x03
 172:	82 83       	std	Z+2, r24	; 0x02
 174:	8f ef       	ldi	r24, 0xFF	; 255
 176:	9f e1       	ldi	r25, 0x1F	; 31
 178:	95 83       	std	Z+5, r25	; 0x05
 17a:	84 83       	std	Z+4, r24	; 0x04
 17c:	97 83       	std	Z+7, r25	; 0x07
 17e:	86 83       	std	Z+6, r24	; 0x06
 180:	8f ef       	ldi	r24, 0xFF	; 255
 182:	9e e1       	ldi	r25, 0x1E	; 30
 184:	91 87       	std	Z+9, r25	; 0x09
 186:	80 87       	std	Z+8, r24	; 0x08
 188:	93 87       	std	Z+11, r25	; 0x0b
 18a:	82 87       	std	Z+10, r24	; 0x0a
 18c:	8f ef       	ldi	r24, 0xFF	; 255
 18e:	9d e1       	ldi	r25, 0x1D	; 29
 190:	95 87       	std	Z+13, r25	; 0x0d
 192:	84 87       	std	Z+12, r24	; 0x0c
 194:	97 87       	std	Z+15, r25	; 0x0f
 196:	86 87       	std	Z+14, r24	; 0x0e
 198:	8f ef       	ldi	r24, 0xFF	; 255
 19a:	9c e1       	ldi	r25, 0x1C	; 28
 19c:	91 8b       	std	Z+17, r25	; 0x11
 19e:	80 8b       	std	Z+16, r24	; 0x10
 1a0:	93 8b       	std	Z+19, r25	; 0x13
 1a2:	82 8b       	std	Z+18, r24	; 0x12
 1a4:	8f ef       	ldi	r24, 0xFF	; 255
 1a6:	9b e1       	ldi	r25, 0x1B	; 27
 1a8:	95 8b       	std	Z+21, r25	; 0x15
 1aa:	84 8b       	std	Z+20, r24	; 0x14
 1ac:	97 8b       	std	Z+23, r25	; 0x17
 1ae:	86 8b       	std	Z+22, r24	; 0x16
 1b0:	8f ef       	ldi	r24, 0xFF	; 255
 1b2:	9a e1       	ldi	r25, 0x1A	; 26
 1b4:	91 8f       	std	Z+25, r25	; 0x19
 1b6:	80 8f       	std	Z+24, r24	; 0x18
 1b8:	93 8f       	std	Z+27, r25	; 0x1b
 1ba:	82 8f       	std	Z+26, r24	; 0x1a
 1bc:	8f ef       	ldi	r24, 0xFF	; 255
 1be:	99 e1       	ldi	r25, 0x19	; 25
 1c0:	95 8f       	std	Z+29, r25	; 0x1d
 1c2:	84 8f       	std	Z+28, r24	; 0x1c
 1c4:	97 8f       	std	Z+31, r25	; 0x1f
 1c6:	86 8f       	std	Z+30, r24	; 0x1e
 1c8:	8a ea       	ldi	r24, 0xAA	; 170
 1ca:	80 93 00 20 	sts	0x2000, r24	; 0x802000 <__bss_end+0x1dc9>
 1ce:	80 93 00 1f 	sts	0x1F00, r24	; 0x801f00 <__bss_end+0x1cc9>
 1d2:	80 93 00 1e 	sts	0x1E00, r24	; 0x801e00 <__bss_end+0x1bc9>
 1d6:	80 93 00 1d 	sts	0x1D00, r24	; 0x801d00 <__bss_end+0x1ac9>
 1da:	80 93 00 1c 	sts	0x1C00, r24	; 0x801c00 <__bss_end+0x19c9>
 1de:	80 93 00 1b 	sts	0x1B00, r24	; 0x801b00 <__bss_end+0x18c9>
 1e2:	80 93 00 1a 	sts	0x1A00, r24	; 0x801a00 <__bss_end+0x17c9>
 1e6:	80 93 00 19 	sts	0x1900, r24	; 0x801900 <__bss_end+0x16c9>
 1ea:	8d b7       	in	r24, 0x3d	; 61
 1ec:	9e b7       	in	r25, 0x3e	; 62
 1ee:	81 15       	cp	r24, r1
 1f0:	92 42       	sbci	r25, 0x22	; 34
 1f2:	b0 f4       	brcc	.+44     	; 0x220 <x_init+0x116>
 1f4:	a0 e0       	ldi	r26, 0x00	; 0
 1f6:	b1 e2       	ldi	r27, 0x21	; 33
 1f8:	80 e0       	ldi	r24, 0x00	; 0
 1fa:	92 e2       	ldi	r25, 0x22	; 34
 1fc:	c1 e0       	ldi	r28, 0x01	; 1
 1fe:	d2 e2       	ldi	r29, 0x22	; 34
 200:	fc 01       	movw	r30, r24
 202:	22 91       	ld	r18, -Z
 204:	2e 93       	st	-X, r18
 206:	be 01       	movw	r22, r28
 208:	68 1b       	sub	r22, r24
 20a:	79 0b       	sbc	r23, r25
 20c:	9c 01       	movw	r18, r24
 20e:	22 50       	subi	r18, 0x02	; 2
 210:	31 09       	sbc	r19, r1
 212:	4d b7       	in	r20, 0x3d	; 61
 214:	5e b7       	in	r21, 0x3e	; 62
 216:	cf 01       	movw	r24, r30
 218:	24 17       	cp	r18, r20
 21a:	35 07       	cpc	r19, r21
 21c:	88 f7       	brcc	.-30     	; 0x200 <x_init+0xf6>
 21e:	02 c0       	rjmp	.+4      	; 0x224 <x_init+0x11a>
 220:	60 e0       	ldi	r22, 0x00	; 0
 222:	70 e0       	ldi	r23, 0x00	; 0
 224:	80 e0       	ldi	r24, 0x00	; 0
 226:	91 e2       	ldi	r25, 0x21	; 33
 228:	86 1b       	sub	r24, r22
 22a:	97 0b       	sbc	r25, r23
 22c:	9e bf       	out	0x3e, r25	; 62
 22e:	8d bf       	out	0x3d, r24	; 61
 230:	78 94       	sei
 232:	df 91       	pop	r29
 234:	cf 91       	pop	r28
 236:	08 95       	ret

00000238 <main>:
 238:	68 df       	rcall	.-304    	; 0x10a <x_init>
 23a:	ff cf       	rjmp	.-2      	; 0x23a <main+0x2>

0000023c <__vector_21>:

/************************************************************************
* TIMER0 ISR for compare match, that for now does nothing.
************************************************************************/
ISR (TIMER0_COMPA_vect)
{
 23c:	1f 92       	push	r1
 23e:	0f 92       	push	r0
 240:	0f b6       	in	r0, 0x3f	; 63
 242:	0f 92       	push	r0
 244:	11 24       	eor	r1, r1
	
}
 246:	0f 90       	pop	r0
 248:	0f be       	out	0x3f, r0	; 63
 24a:	0f 90       	pop	r0
 24c:	1f 90       	pop	r1
 24e:	18 95       	reti

00000250 <_exit>:
 250:	f8 94       	cli

00000252 <__stop_program>:
 252:	ff cf       	rjmp	.-2      	; 0x252 <__stop_program>
